2022/10/19/23:18

游戏循环：在各个游戏状态来回切换
（各个文本精灵在app::begin创建）
1.游戏信息介绍
	dis_info:	set_info visible -> play music
	hide_info:  set_info invisible -> change game state
2.规则介绍
	dis_rules:	set_rule visible -> play music
	hide_rules:  set_rule invisible -> change game state
3.开始界面
	init_mario->    //对游戏初始化
	init_tiles->    //(tile的深度根据img index大小设置，index越大，深度越深)   设置为20*img_index
	display_tiles->
	->display_prompt对敌人初始化
	->init_enemy   //
	->若提示键被按下隐藏文本对象，状态切换到下一个
4.game_in_play
	调用play->游戏结束hide_game->状态切换到下一个
5.game_over
	display_game_over
	->hide_game_over->状态切换到下一个
6.summary
	display_summary（分两种情况1.游戏胜利时的展示  2.游戏中途掉生命值的展示）
	->hide_summary
	->状态切换到下一个

play_game应该干什么？
1.移动mario
	1.移动逻辑
		未到达边界时移动地图（边界是什么？）
		移动可以用GetDirectionX,Y来获得方向键输入          也可以响应按键活动来移动固定距离，我采用后者，方便改键

		到达边界则移动mario 坐标（移动之后怎么移动回来？如果马里奥坐标不等于初始值，则优先移动马里奥即可）

		移动时的碰撞检测？
		和跳跃时的碰撞检测同理

	2.跳跃逻辑
		 方向向右则播放向右跳的动画，方向向左则播放向左跳的动画

		如何实现可以边跳跃边移动？
		如果移动状态为jump，则每次更新x同时更新y值，当上升的高度达到跳跃高度时就不在上升，需要一个变量
		pre_y来存储跳跃之前的y值，通过判断当前的y值与pre_v的差值是否大于jump_dist实现
		跳跃过程中上面撞到物体也应该停止上升，（否则就是单向板）
		
		如何实现一段跳？
		只有在一次跳跃结束后才能开始下一次跳跃，也就是只有move_state不为1和2时才能更新pre_y的值和移动状态
		然而在一次跳跃结束时立马跳跃，仍会连跳！
		可以通过检测落脚点不是sky才能跳跃实现

		一次跳跃结束包括上升和下降两个阶段，move_state其实在上升完后就变成0了，如何判断mario是否在下降？
		1>检测整个tile_map，找出与mario有碰撞的sprite，如果是天空等sprite则下落        o(n)
		2>与mario碰撞的sprite只可能是周围一圈，而且只用判断与脚碰撞的sprite即可
		获得mario x,y值（包围框左上角点的坐标），y+TILE_H，得到包围框左下角坐标（脚底），根据这两个值得到
		所在tile_map的行号和列号从而判断当前与左下角碰撞的tile类型。
		行号tile_r = y / TILE_H
		列号tile_c = (x + 第一块TILE的x值的绝对值)/TILE_W          o(1)
		如果mario包围框左下角的坐标所在的tile是sky则一直下落,否则说明已经踩到东西，将mario的y值设置为这个东西的y值减去mario的height

		事实上仅对mario包围框左下角的点进行检测是不够的的，还需对右下角的点进行检测，甚至是左下角到右下角的多个点进行检测！
		而且应该根据情况检测左下方和右下方的点，而不是顶点，否则可能会造成从障碍物掉落时按反方向键会

		再进一步，不仅需要下落检测，还需要上升检测，即跳跃检测，同理移动时也需要碰撞检测，分别是向左和向右，通过左右包围盒顶点实现检测

2.移动敌人
	下落时不能左右移动，一次只处理一个方向上的运动
	如果没踩东西则一直下落  否则说明已经踩到东西，可以适当减小  y值，避免出现卡进地板的情况(将y设成固定值，否则会抖动)

	左右移动是相对自身坐标移动还是相对地图移动？
	1>相对屏幕坐标系移动：在没碰到东西时一直移动，每次加固定距离，碰到了则改变方向，  对于y值的设置和马里奥同理
	但这样会造成一个相对速度的问题，怪物实际速度等于  自身速度 + 地图移动速度

	2>以地图为参考系移动，这才是比较合理的
	如何实现？在地图上选取一个参考点（可以以第一个tile为参考点），每次移动距离都是相对这个参考点在改变，需要再增加一个变量
	来存储与参考点的相对距离，这样怪物的速度就恒定为自身速度了

3.碰撞检测，mario可能与敌人、金币、道具发生碰撞，更新游戏状态。

	与敌人碰撞是踩还是撞上需要判断

	如何让怪物死亡之后一段时间消失？
	死亡时记录死亡时间，设置一个time，超出时间则消失

	生命值减一后，游戏并没有结束，将mario设置到哪个位置？
	比较简单的方法是设置为初始位置靠左一点

	与奖励块tile碰撞后需要切换tile图片，一次游戏结束后把图片切换回来

	奖励分为显式奖励和隐式奖励，显式奖励位置固定（固定位置是相对于地图而言的，所以移动过程中还需根据地图相对坐标更新坐标值），如金币，
	隐式奖励藏在奖励块中，如蘑菇，通过深度值设置大于奖励块来实现

创建多个enemy，使用对象数组，用一个数组存储所有enemy的初始坐标
多个奖励精灵也是这么干的

问题：如果每次按下方向键后PlaySprite会导致移动时一直播放第一帧
解决：不播放动画，通过方向键按下手动切换帧，并且通过简单的计数来控制帧率
每次移动完后根据当前方向播放向左或者向右静止的一帧，何时恢复，在哪里恢复？ 暂时还没有解决

用process.py将图片拼接